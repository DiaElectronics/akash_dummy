swagger: "2.0"
info:
  description: "demo generated app"
  title: demo
  version: 1.0.0
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
securityDefinitions:
  authKey:
    description: Session token inside Authorization header.
    type: apiKey
    in: header
    name: Authorization
security:
  - authKey: []
paths:  
  /healthCheck:    
    get:
      tags:
        - Standard
      security:
        - {}
      operationId: healthCheck 
      responses:        
        200:
          description: OK 
          schema:
            type: object
            properties:
              ok:
                type: boolean
  /addTestData:    
    post:
      tags:
        - Standard
      operationId: addTestData 
      responses:        
        200:
          description: OK 
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /deploy/get:    
    post: 
      tags:
        - Deploy
      operationId: getDeploy
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/deploy"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /deploy/{id}/start:    
    post: 
      tags:
        - Deploy
      operationId: startDeploy
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/deploy"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /deploy/{id}/stop:    
    post: 
      tags:
        - Deploy
      operationId: stoptDeploy
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/deploy"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /deploy/{id}/update:    
    post: 
      tags:
        - Deploy
      operationId: updateDeploy
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/deploy"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /deploy/add:    
    post: 
      tags:
        - Deploy
      operationId: addDeploy
      parameters:
        - name: body
          in: body
          schema:
                $ref: "#/definitions/deployAdd" 
      responses:
        201:
          description: Created 
          schema:
            $ref: "#/definitions/deploy"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /deploy/delete:    
    delete: 
      tags:
        - Deploy
      operationId: deleteDeploy
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /deploy/edit:    
    put: 
      tags:
        - Deploy
      operationId: editDeploy
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string
              data:
                $ref: "#/definitions/deployAdd" 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/deploy"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /deploy/list:    
    post: 
      tags:
        - Deploy
      operationId: listDeploy
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/listParams" 
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int32
              warnings:
                type: array
                items:
                  type: string
              items:
                type: array
                items:
                  $ref: "#/definitions/deploy"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /example/get:    
    post: 
      tags:
        - Example
      operationId: getExample
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/example"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /example/add:    
    post: 
      tags:
        - Example
      operationId: addExample
      parameters:
        - name: body
          in: body
          schema:
                $ref: "#/definitions/exampleAdd" 
      responses:
        201:
          description: Created 
          schema:
            $ref: "#/definitions/example"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /example/delete:    
    delete: 
      tags:
        - Example
      operationId: deleteExample
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /example/edit:    
    put: 
      tags:
        - Example
      operationId: editExample
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string
              data:
                $ref: "#/definitions/exampleAdd" 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/example"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /example/list:    
    post: 
      tags:
        - Example
      operationId: listExample
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/listParams" 
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int32
              warnings:
                type: array
                items:
                  type: string
              items:
                type: array
                items:
                  $ref: "#/definitions/example"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /transaction/get:    
    post: 
      tags:
        - Transaction
      operationId: getTransaction
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/transaction"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /transaction/add:    
    post: 
      tags:
        - Transaction
      operationId: addTransaction
      parameters:
        - name: body
          in: body
          schema:
                $ref: "#/definitions/transactionAdd" 
      responses:
        201:
          description: Created 
          schema:
            $ref: "#/definitions/transaction"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /transaction/delete:    
    delete: 
      tags:
        - Transaction
      operationId: deleteTransaction
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /transaction/edit:    
    put: 
      tags:
        - Transaction
      operationId: editTransaction
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string
              data:
                $ref: "#/definitions/transactionAdd" 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/transaction"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /transaction/list:    
    post: 
      tags:
        - Transaction
      operationId: listTransaction
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/listParams" 
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int32
              warnings:
                type: array
                items:
                  type: string
              items:
                type: array
                items:
                  $ref: "#/definitions/transaction"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/get:    
    post: 
      tags:
        - User
      operationId: getUser
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/add:    
    post: 
      tags:
        - User
      operationId: addUser
      parameters:
        - name: body
          in: body
          schema:
                $ref: "#/definitions/userAdd" 
      responses:
        201:
          description: Created 
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/delete:    
    delete: 
      tags:
        - User
      operationId: deleteUser
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/edit:    
    put: 
      tags:
        - User
      operationId: editUser
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string
              data:
                $ref: "#/definitions/userAdd" 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/list:    
    post: 
      tags:
        - User
      operationId: listUser
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/listParams" 
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int32
              warnings:
                type: array
                items:
                  type: string
              items:
                type: array
                items:
                  $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
definitions:
  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        description: Either same as HTTP Status Code OR >= 600.
        type: integer
        format: int32
      message:
        type: string
  
  deploy:
    type: object
    description: "deploy object"
    properties:
      id:
        type: string
      config:
        type: string
      cpuUnits:
        type: number
      createdAt:
        type: string
        format: date-time
        x-nullable: true
      memoryMb:
        type: integer
        format: int32
      name:
        type: string
      price:
        type: number
      state:
        type: string
      storageMb:
        type: integer
        format: int32            
      user:
        $ref: "#/definitions/user"
  deployAdd:
    type: object
    description: "deploy model for add and edit methods"
    properties:
      config:
        type: string
      cpuUnits:
        type: number
      memoryMb:
        type: integer
        format: int32
      name:
        type: string
      price:
        type: number
      state:
        type: string
      storageMb:
        type: integer
        format: int32            
      user:
        type: string
  
  example:
    type: object
    description: "example object"
    properties:
      id:
        type: string
      cpuUnits:
        type: number
      memoryMb:
        type: integer
        format: int32
      name:
        type: string
      price:
        type: number
      storageMb:
        type: integer
        format: int32            
      user:
        $ref: "#/definitions/user"
  exampleAdd:
    type: object
    description: "example model for add and edit methods"
    properties:
      cpuUnits:
        type: number
      memoryMb:
        type: integer
        format: int32
      name:
        type: string
      price:
        type: number
      storageMb:
        type: integer
        format: int32            
      user:
        type: string
  
  transaction:
    type: object
    description: "transaction object"
    properties:
      id:
        type: string
      amount:
        type: number
      createdAt:
        type: string
        format: date-time
        x-nullable: true
      info:
        type: string
      type:
        type: string            
      user:
        $ref: "#/definitions/user"
  transactionAdd:
    type: object
    description: "transaction model for add and edit methods"
    properties:
      amount:
        type: number
      info:
        type: string
      type:
        type: string            
      user:
        type: string
  
  user:
    type: object
    description: "user object"
    properties:
      id:
        type: string
      balance:
        type: number
      name:
        type: string
      role:
        type: string
  userAdd:
    type: object
    description: "user model for add and edit methods"
    properties:
      balance:
        type: number
      name:
        type: string
      role:
        type: string
 


  listParams:
    type: object
    description: params for list method
    properties:
      limit:
        type: integer
        minimum: 1
      offset:
        type: integer
        minimum: 0
      filterGroups:
        type: array
        items:
          $ref: "#/definitions/filterGroup" 
      sortBy:
        type: string
      orderBy:
        type: string
        enum: [ASC, DESC]

  filterGroup:
    type: object
    description: params for grouping filters
    properties:
      key:
        type: string
      logicFilter:
        description: "Comparing option: true == 'AND', false == 'OR'"
        type: boolean
      filters:
        type: array
        items:
          $ref: "#/definitions/filter" 
      
  filter:
    type: object
    properties:
      value:
        type: string
      operator:
        description: "enum ==, !=, <, >, <=, >=, in, !in"
        type: string
      ignoreCase:
        type: boolean
