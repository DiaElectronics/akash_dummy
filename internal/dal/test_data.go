// Code generated by mtgroup-generator.
package dal

import (
	"time"
	
	"demo/internal/app"
		"demo/internal/types"

	"github.com/go-openapi/strfmt"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

var (
	testDeploy1 = &app.Deploy{
			Config: "consequatur",
			CpuUnits: types.NewDecimal(848.67),
			CreatedAt: mustParseTime("2021-12-28T14:46:56.469Z"),
			MemoryMb: 95599521,
			Name: "commodi",
			Price: types.NewDecimal(569.17),
			State: "ratione",
			StorageMb: 366536233,
			User: testUser1,
	}
		testDeploy2 = &app.Deploy{
				Config: "et",
				CpuUnits: types.NewDecimal(901.35),
				CreatedAt: mustParseTime("2024-12-06T15:35:54.529Z"),
				MemoryMb: 464686057,
				Name: "eos",
				Price: types.NewDecimal(689.52),
				State: "suscipit",
				StorageMb: 1898821326,
				User: testUser2,
		}
		testDeploys = []*app.Deploy{testDeploy1, testDeploy2}
	testExample1 = &app.Example{
			CpuUnits: types.NewDecimal(344.27),
			MemoryMb: -1545385071,
			Name: "aut",
			Price: types.NewDecimal(927.45),
			StorageMb: 1052668593,
			User: testUser1,
	}
		testExample2 = &app.Example{
				CpuUnits: types.NewDecimal(67.99),
				MemoryMb: -101099436,
				Name: "sunt",
				Price: types.NewDecimal(973.17),
				StorageMb: -649197409,
				User: testUser2,
		}
		testExamples = []*app.Example{testExample1, testExample2}
	testTransaction1 = &app.Transaction{
			Amount: types.NewDecimal(902.42),
			CreatedAt: mustParseTime("2023-12-04T02:14:48.591Z"),
			Info: "dolor",
			Type: "magni",
			User: testUser1,
	}
		testTransaction2 = &app.Transaction{
				Amount: types.NewDecimal(335.67),
				CreatedAt: mustParseTime("1948-04-10T09:33:10.756Z"),
				Info: "aliquam",
				Type: "sint",
				User: testUser2,
		}
		testTransactions = []*app.Transaction{testTransaction1, testTransaction2}
	testUser1 = &app.User{
			Balance: types.NewDecimal(845.80),
			Name: "atque",
			Role: "ducimus",
	}
		testUser2 = &app.User{
				Balance: types.NewDecimal(194.66),
				Name: "est",
				Role: "adipisci",
		}
		testUsers = []*app.User{testUser1, testUser2}
)
func (a *Repo) AddTestData(profileID, isolatedEntityID string) error { 
	var err error
				testUser1.ID, err = a.addUser(profileID, isolatedEntityID, testUser1)
				if err != nil {
					return err
				}
					testUser2.ID, err = a.addUser(profileID, isolatedEntityID, testUser2)
					if err != nil {
						return err
					}
				testDeploy1.ID, err = a.addDeploy(profileID, isolatedEntityID, testDeploy1)
				if err != nil {
					return err
				}
					testDeploy2.ID, err = a.addDeploy(profileID, isolatedEntityID, testDeploy2)
					if err != nil {
						return err
					}
				testExample1.ID, err = a.addExample(profileID, isolatedEntityID, testExample1)
				if err != nil {
					return err
				}
					testExample2.ID, err = a.addExample(profileID, isolatedEntityID, testExample2)
					if err != nil {
						return err
					}
				testTransaction1.ID, err = a.addTransaction(profileID, isolatedEntityID, testTransaction1)
				if err != nil {
					return err
				}
					testTransaction2.ID, err = a.addTransaction(profileID, isolatedEntityID, testTransaction2)
					if err != nil {
						return err
					}
	return nil
}

func mustParseTime(t string) *time.Time {
	date, err := time.Parse(time.RFC3339, t)
	if err != nil {
		date, _ = time.Parse(strfmt.RFC3339FullDate, t)
	}
	return &date
}