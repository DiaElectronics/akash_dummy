
// Code generated by mtgroup-generator.
package dal

import (
	"time"
		"database/sql"
		"demo/internal/types"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

const (

	sqlGetUser = `
	SELECT
		id,
		balance,
		name,
		role
	FROM
		users
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`

	sqlGetMyUserID = `
	SELECT
		id
	FROM
		users
	WHERE
		created_by=:created_by AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted AND
		bound
	`


	sqlAddUser = `
	INSERT INTO users(
		balance,
		name,
		role,
		id,
		created_by,
		isolated_entity_id
	) VALUES (
		:balance,
		:name,
		:role,
		:id,
		:created_by,
		:isolated_entity_id
	)
	RETURNING
		id
	`

	sqlBindUserToProfile = `
	UPDATE
		users
	SET
		bound=true
	WHERE
		id=:id AND
		created_by=:created_by AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted AND
		NOT bound
	`

	sqlDeleteUser = `
	UPDATE
		users
	SET
		deleted=true,
		deleted_at=:deleted_at,
		deleted_by=:deleted_by
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`

	sqlEditUser = `
	UPDATE
		users
	SET
		balance=:balance,
		name=:name,
		role=:role
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`
	
	sqlListUser = `
	SELECT
		id,
		balance,
		name,
		role
	FROM
		users
	WHERE
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`
	sqlListUserCount = `
	SELECT
		COUNT(*)
	FROM
		users
	WHERE
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`
	
)

type (
    argGetUser struct {
        ID sql.NullString `db:"id"`
			IsolatedEntityID string `db:"isolated_entity_id"`
    }

	argGetMyUserID struct {
			CreatedBy string `db:"created_by"`
			IsolatedEntityID string `db:"isolated_entity_id"`
    }
	argAddUser struct {
							ID string `db:"id"`
							Balance types.Decimal `db:"balance"`
							Name string `db:"name"`
							Role string `db:"role"`
			CreatedBy string `db:"created_by"`
			IsolatedEntityID string `db:"isolated_entity_id"`
	}
	argBindUserToProfile struct {
		ID string `db:"id"`
			CreatedBy string `db:"created_by"`
			IsolatedEntityID string `db:"isolated_entity_id"`
	}
	argEditUser struct {
						ID string `db:"id"`
						Balance types.Decimal `db:"balance"`
						Name string `db:"name"`
						Role string `db:"role"`
			IsolatedEntityID string `db:"isolated_entity_id"`
	}
	argDeleteUser struct {
		ID string `db:"id"`
		DeletedAt *time.Time `db:"deleted_at"`
		DeletedBy string `db:"deleted_by"`
			IsolatedEntityID string `db:"isolated_entity_id"`
	}
)