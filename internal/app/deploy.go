// Code generated by mtgroup-generator.  
package app

import (
		"time"
		"demo/internal/types"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!
type Deploy struct {
		Config string
		CpuUnits types.Decimal
		CreatedAt *time.Time
		ID string
		MemoryMb int32
		Name string
		Price types.Decimal
		State string
		StorageMb int32
		User *User
}
		func (a *app) GetDeploy(prof Profile, id string) (*Deploy, error) {
			if !a.rulesSet.GetDeployAccessManager(prof) {
				return nil, ErrAccessDenied
			}
			return a.repo.GetDeploy(id, prof.IsolatedEntityID)
		}
		func (a *app) AddDeploy(prof Profile, m *Deploy) (*Deploy, error) {
			if !a.rulesSet.AddDeployAccessManager(prof) {
				return nil, ErrAccessDenied
			}
			return a.repo.AddDeploy(prof.ID, prof.IsolatedEntityID, m)
		}
		func (a *app) DeleteDeploy(prof Profile, id string) error {
			if !a.rulesSet.DeleteDeployAccessManager(prof) {
				return ErrAccessDenied
			}
			return a.repo.DeleteDeploy(id, prof.ID, prof.IsolatedEntityID)
		}
		func (a *app) EditDeploy(prof Profile, id string, m *Deploy) (*Deploy, error) {
			if !a.rulesSet.EditDeployAccessManager(prof) {
				return nil, ErrAccessDenied
			}
			return a.repo.EditDeploy(id, prof.IsolatedEntityID, m)
		}
		func (a *app) ListDeploy(prof Profile, params *ListParams) ([]*Deploy, int, []string, error) {
			if !a.rulesSet.ListDeployAccessManager(prof) {
				return nil, 0, nil, ErrAccessDenied
			}
			return a.repo.ListDeploy(prof.IsolatedEntityID, params)
		}
          



