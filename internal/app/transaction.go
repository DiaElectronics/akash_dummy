// Code generated by mtgroup-generator.  
package app

import (
		"time"
		"demo/internal/types"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!
type Transaction struct {
		Amount types.Decimal
		CreatedAt *time.Time
		ID string
		Info string
		Type string
		User *User
}
		func (a *app) GetTransaction(prof Profile, id string) (*Transaction, error) {
			if !a.rulesSet.GetTransactionAccessManager(prof) {
				return nil, ErrAccessDenied
			}
			return a.repo.GetTransaction(id, prof.IsolatedEntityID)
		}
		func (a *app) AddTransaction(prof Profile, m *Transaction) (*Transaction, error) {
			if !a.rulesSet.AddTransactionAccessManager(prof) {
				return nil, ErrAccessDenied
			}
			return a.repo.AddTransaction(prof.ID, prof.IsolatedEntityID, m)
		}
		func (a *app) DeleteTransaction(prof Profile, id string) error {
			if !a.rulesSet.DeleteTransactionAccessManager(prof) {
				return ErrAccessDenied
			}
			return a.repo.DeleteTransaction(id, prof.ID, prof.IsolatedEntityID)
		}
		func (a *app) EditTransaction(prof Profile, id string, m *Transaction) (*Transaction, error) {
			if !a.rulesSet.EditTransactionAccessManager(prof) {
				return nil, ErrAccessDenied
			}
			return a.repo.EditTransaction(id, prof.IsolatedEntityID, m)
		}
		func (a *app) ListTransaction(prof Profile, params *ListParams) ([]*Transaction, int, []string, error) {
			if !a.rulesSet.ListTransactionAccessManager(prof) {
				return nil, 0, nil, ErrAccessDenied
			}
			return a.repo.ListTransaction(prof.IsolatedEntityID, params)
		}
      



