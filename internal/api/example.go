// Code generated by mtgroup-generator.   
package api

import (
	"errors"
	"demo/internal/def"
	"github.com/go-openapi/swag"

	"demo/internal/api/restapi/models"
	example "demo/internal/api/restapi/restapi/operations/example"
	"demo/internal/app"
		"demo/internal/types"

	extauthapi "github.com/mtgroupit/mt-mock-extauthapi"
	"github.com/go-openapi/runtime/middleware" 
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!
func (svc *service) GetExample(params example.GetExampleParams, profile interface{}) middleware.Responder {
	prof := profile.(*extauthapi.Profile)
		c, err := svc.app.GetExample(toAppProfile(prof), params.Body.ID)
		switch {
		default:
			log.PrintErr("GetExample server error", def.LogHTTPStatus, codeInternal.status, "code", codeInternal.extra, "err", err)
			return example.NewGetExampleDefault(codeInternal.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeInternal.extra),
				Message: swag.String("internal error"),
			})
		case errors.Is(err, app.ErrAccessDenied):
			log.Info("GetExample client error", def.LogHTTPStatus, codeForbidden.status, "code", codeForbidden.extra, "err", err)
			return example.NewGetExampleDefault(codeForbidden.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeForbidden.extra),
				Message: swag.String(err.Error()),
			})
		case errors.Is(err, app.ErrNotFound):
			log.Info("GetExample client error", def.LogHTTPStatus, codeNotFound.status, "code", codeNotFound.extra, "err", err)
			return example.NewGetExampleDefault(codeNotFound.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeNotFound.extra),
				Message: swag.String(err.Error()),
			})
		case err == nil:
			log.Info("GetExample ok", "id", params.Body.ID)
			return example.NewGetExampleOK().WithPayload(apiExample(c))
		}
}
func (svc *service) AddExample(params example.AddExampleParams, profile interface{}) middleware.Responder {
	prof := profile.(*extauthapi.Profile)
		c, err := svc.app.AddExample(toAppProfile(prof), appExampleAdd(params.Body))
		switch {
		default:
			log.PrintErr("AddExample server error", def.LogHTTPStatus, codeInternal.status, "code", codeInternal.extra, "err", err)
			return example.NewAddExampleDefault(codeInternal.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeInternal.extra),
				Message: swag.String("internal error"),
			})
		case errors.Is(err, app.ErrAccessDenied):
			log.Info("AddExample client error", def.LogHTTPStatus, codeForbidden.status, "code", codeForbidden.extra, "err", err)
			return example.NewAddExampleDefault(codeForbidden.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeForbidden.extra),
				Message: swag.String(err.Error()),
			})
		case err == nil:
			log.Info("AddExample ok")
			return example.NewAddExampleCreated().WithPayload(apiExample(c))
		}
}
func (svc *service) DeleteExample(params example.DeleteExampleParams, profile interface{}) middleware.Responder {
	prof := profile.(*extauthapi.Profile)
		err := svc.app.DeleteExample(toAppProfile(prof), params.Body.ID)
		switch {
		default:
			log.PrintErr("DeleteExample server error", def.LogHTTPStatus, codeInternal.status, "code", codeInternal.extra, "err", err)
			return example.NewDeleteExampleDefault(codeInternal.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeInternal.extra),
				Message: swag.String("internal error"),
			})
		case errors.Is(err, app.ErrAccessDenied):
			log.Info("DeleteExample client error", def.LogHTTPStatus, codeForbidden.status, "code", codeForbidden.extra, "err", err)
			return example.NewDeleteExampleDefault(codeForbidden.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeForbidden.extra),
				Message: swag.String(err.Error()),
			})
		case errors.Is(err, app.ErrNotFound):
			log.Info("DeleteExample client error", def.LogHTTPStatus, codeNotFound.status, "code", codeNotFound.extra, "err", err)
			return example.NewDeleteExampleDefault(codeNotFound.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeNotFound.extra),
				Message: swag.String(err.Error()),
			})
		case err == nil:
			log.Info("DeleteExample ok", "id", params.Body.ID)
			return example.NewDeleteExampleNoContent()
		}
}
func (svc *service) EditExample(params example.EditExampleParams, profile interface{}) middleware.Responder {
	prof := profile.(*extauthapi.Profile)
		c, err := svc.app.EditExample(toAppProfile(prof), params.Body.ID, appExampleAdd(params.Body.Data))
		switch {
		default:
			log.PrintErr("EditExample server error", def.LogHTTPStatus, codeInternal.status, "code", codeInternal.extra, "err", err)
			return example.NewEditExampleDefault(codeInternal.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeInternal.extra),
				Message: swag.String("internal error"),
			})
		case errors.Is(err, app.ErrAccessDenied):
			log.Info("EditExample client error", def.LogHTTPStatus, codeForbidden.status, "code", codeForbidden.extra, "err", err)
			return example.NewEditExampleDefault(codeForbidden.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeForbidden.extra),
				Message: swag.String(err.Error()),
			})
		case errors.Is(err, app.ErrNotFound):
			log.Info("EditExample client error", def.LogHTTPStatus, codeNotFound.status, "code", codeNotFound.extra, "err", err)
			return example.NewEditExampleDefault(codeNotFound.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeNotFound.extra),
				Message: swag.String(err.Error()),
			})
		case err == nil:
			log.Info("EditExample ok")
			return example.NewEditExampleOK().WithPayload(apiExample(c))
		}
}
func (svc *service) ListExample(params example.ListExampleParams, profile interface{}) middleware.Responder {
	prof := profile.(*extauthapi.Profile)
		c, count, warnings, err := svc.app.ListExample(toAppProfile(prof), appListParams(params.Body))
		switch {
		default:
			log.PrintErr("ListExample server error", def.LogHTTPStatus, codeInternal.status, "code", codeInternal.extra, "err", err)
			return example.NewListExampleDefault(codeInternal.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeInternal.extra),
				Message: swag.String("internal error"),
			})
		case errors.Is(err, app.ErrAccessDenied):
			log.Info("ListExample client error", def.LogHTTPStatus, codeForbidden.status, "code", codeForbidden.extra, "err", err)
			return example.NewListExampleDefault(codeForbidden.status).WithPayload(&models.Error{
				Code:    swag.Int32(codeForbidden.extra),
				Message: swag.String(err.Error()),
			})
		case err == nil:
			log.Info("ListExample ok")
			return example.NewListExampleOK().WithPayload(&example.ListExampleOKBody{
				Items: apiExamples(c),
				Warnings: warnings,
				Count: int32(count),
			})
		}
}
       



func apiExample(a *app.Example) *models.Example {
	if a == nil {
		return nil
	}
	return &models.Example{
			ID: a.ID,
			CpuUnits: a.CpuUnits.Float64(),
			MemoryMb: a.MemoryMb,
			Name: a.Name,
			Price: a.Price.Float64(),
			StorageMb: a.StorageMb,
			User: apiUser(a.User),
	}
}

func apiExamples(apps []*app.Example) []*models.Example {
	apis := []*models.Example{}
	for i := range apps {
		apis = append(apis, apiExample(apps[i]))
	}
	return apis
}

func appExample(a *models.Example, withStructs bool) *app.Example {
	if a == nil {
		return nil
	}
	example := &app.Example{}
		if withStructs {
					example.User = appUser(a.User)
		}
			example.ID = a.ID
			example.CpuUnits = types.NewDecimal(a.CpuUnits)
			example.MemoryMb = a.MemoryMb
			example.Name = a.Name
			example.Price = types.NewDecimal(a.Price)
			example.StorageMb = a.StorageMb
	
	return example
}

func appExamples(apis []*models.Example, withStructs bool) []*app.Example {
	apps := []*app.Example{}
	for i := range apis {
		apps = append(apps, appExample(apis[i], withStructs))
	}
	return apps
}

func appExampleAdd(a *models.ExampleAdd) *app.Example {
	if a == nil {
		return nil
	}
	example := &app.Example{}
			example.CpuUnits = types.NewDecimal(a.CpuUnits)
			example.MemoryMb = a.MemoryMb
			example.Name = a.Name
			example.Price = types.NewDecimal(a.Price)
			example.StorageMb = a.StorageMb
			if a.User != "" {
				example.User = &app.User{ID: a.User}
			}
	
	
	return example
}

func appExamplesAdd(apis []*models.ExampleAdd) []*app.Example {
	apps := []*app.Example{}
	for i := range apis {
		apps = append(apps, appExampleAdd(apis[i]))
	}
	return apps
}
